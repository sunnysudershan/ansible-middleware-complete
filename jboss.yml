---
- name: "JBoss EAP installation and configuration"
  hosts: jboss
  become: yes
  vars:
    wildfly_install_workdir: '/opt/'
    install_name: "{{ override_install_name | default('jboss') }}"
    jboss_version: "7.4"
    wildfly_version: "{{ jboss_version }}"
    wildfly_archive_filename: "{{ install_name }}-eap-{{ wildfly_version }}.zip"
    wildfly_user: "{{ install_name }}"
    wildfly_config_base: standalone-ha.xml
    wildfly_home: "{{ wildfly_install_workdir }}/{{ install_name }}-eap-{{ wildfly_version }}"
    wildfly_basedir_prefix: "/opt/{{ install_name }}"
    wildfly_config_name: "{{ install_name }}"
    wildfly_port_range_offset: 0
    wildfly_instance_name: "{{ inventory_hostname }}"
    service_systemd_env_file: "/etc/{{ install_name }}.conf"
    service_systemd_conf_file: "/usr/lib/systemd/system/{{ wildfly_instance_name }}.service"
    instance_http_ports:
      - 8080
    instance_management_ports:
      - 9990
    instance_ajp_port:
      - 8009
    jboss_eap_rhn_id: "99481"
    jdbc_driver_module_dir: "{{ wildfly_home }}/modules/org/postgresql/main"
    jdbc_driver_version: 9.4.1212
    jdbc_driver_jar_filename: "postgresql-{{ jdbc_driver_version }}.jar"
    jdbc_driver_jar_url: "https://repo.maven.apache.org/maven2/org/postgresql/postgresql/{{ jdbc_driver_version }}/{{ jdbc_driver_jar_filename }}"
    jdbc_driver_jar_installation_path: "{{ jdbc_driver_module_dir }}/{{ jdbc_driver_jar_filename }}"
    jdbc_driver_module_name: 'org.postgresql'
    app:
      name: 'addressbook.war'
      url: 'https://gpte-public.s3.amazonaws.com/addressbook.war'

  collections:
    - middleware_automation.redhat_csp_download
    - middleware_automation.wildfly
    - middleware_automation.jcliff
  roles:
    - redhat_csp_download
    - wildfly_install
    
  tasks:
    - name: install firewalld
      become: true
      action: yum name=firewalld state=installed
    - name: Start firewalld
      become: true
      service: name=firewalld state=started enabled=yes
    - name: configure firewall for Wildfly ports
      become: yes
      firewalld:
        port: "{{ port }}"
        permanent: true
        state: enabled
        immediate: yes
      loop:
        - "{{ instance_http_ports[0] }}/tcp"
        - "{{ instance_management_ports[0] }}/tcp"
        - "{{ instance_ajp_port[0] }}/tcp"
      loop_control:
        loop_var: port    
    - name: "Set up for JBoss instance"
      include_role:
        name: wildfly_systemd
    - name: "Set up for JBoss module"
      include_role:
        name: wildfly_driver
    - name: JCliff
      include_role:
        name: jcliff
    
    - name: Modify sockets rule
      become: false
      local_action: template src=remote_sockets.j2 dest=./jcliff/rules/remote_sockets.jcliff.yml

    - name: "Fine tuning configuration"
      jcliff:
        wfly_home: "{{ wildfly_home }}"
        rule_file: jcliff/rules
        timeout: 7000
        management_port: "{{ item }}"
        components:
        - drivers:
          - driver_name: postgresql
            driver_module_name: org.postgresql
            driver_class_name: org.postgresql.Driver
            driver_xa_datasource_class_name: org.postgresql.xa.PGXADataSource
        - datasources:
            - name: "{{ instance_name }}db"
              use_java_context: 'true'
              jndi_name: "java:jboss/datasources/{{ postgres.jndi_ds }}"
              connection_url: "jdbc:postgresql://{{ (groups['pgsql'][0] if groups['pgsql'] | length > 0 else 'localhost') }}:5432/{{ postgres.db_name }}"
              driver_name: postgresql
              user_name: "{{ postgres.user.name }}"
              password: "{{ postgres.user.password }}"
        - modcluster:
            proxy:
              - name: default
                proxies:
                  - proxy1

      loop: "{{ instance_management_ports }}"
 
    - name: "Ensures webapp {{ app.name }} has been retrieved from {{ app.url }}"
      get_url:
        url: "{{ app.url }}"
        dest: "{{ wildfly_install_workdir }}/{{ app.name }}"
    - name: "Deploy webapp"
      include_role:
        name: wildfly_utils
        tasks_from: jboss_cli.yml
      vars:
        jboss_home: "{{ wildfly_home }}"
        query: "'deploy --force {{ wildfly_install_workdir }}/{{ app.name }}'"
        jboss_cli_controller_port: "{{ item }}"
      loop: "{{ instance_management_ports }}"

  post_tasks:
    - include_tasks: validate.yml
      loop: "{{ instance_http_ports }}" 
